// Copyright 2019 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

namespace emu8051opcodes {

  enum class instruction_t {
    INS_UNDEFINED,
    INS_ACALL,
    INS_ADD,
    INS_ADDC,
    INS_AJMP,
    INS_ANL,
    INS_CJNE,
    INS_CLR,
    INS_CPL,
    INS_DA,
    INS_DEC,
    INS_DIV,
    INS_DJNZ,
    INS_INC,
    INS_JB,
    INS_JBC,
    INS_JC,
    INS_JMP,
    INS_JNB,
    INS_JNC,
    INS_JNZ,
    INS_JZ,
    INS_LCALL,
    INS_LJMP,
    INS_MOV,
    INS_MOVC,
    INS_MOVX,
    INS_MUL,
    INS_NOP,
    INS_ORL,
    INS_POP,
    INS_PUSH,
    INS_RET,
    INS_RETI,
    INS_RL,
    INS_RLC,
    INS_RR,
    INS_RRC,
    INS_SETB,
    INS_SJMP,
    INS_SUBB,
    INS_SWAP,
    INS_XCH,
    INS_XCHD,
    INS_XRL
  };

  enum class arg_t {
    ARG_NONE,
    ARG_A,
    ARG_B,
    ARG_R,
    ARG_R0_INDIRECT_IRAM,
    ARG_R1_INDIRECT_IRAM,
    ARG_R0_INDIRECT_XRAM,
    ARG_R1_INDIRECT_XRAM,
    ARG_DIRECT_IRAM,  // IRAM/SFR access.
    ARG_IMM8,
    ARG_IMM11,  // Top 3 bit are taken from instruction opcode.
    ARG_IMM16,
    ARG_REL8,  // Relative 8-bit signed offset.
    ARG_C,
    ARG_BIT,  // Bit fetched from bit-address
    ARG_NEG_BIT,  // Negated bit fetched from bit-address
    ARG_DPTR,
    ARG_DPTR_INDIRECT_XRAM,
    ARG_A_DPTR, // A+DPTR (used with INS_JMP).
    ARG_A_PC_INDIRECT_PMEM, // @A+DPTR (used with INS_MOVC)
    ARG_A_DPTR_INDIRECT_PMEM // @A+PC (used with INS_MOVC)
  };

  struct instruction_decode_table_t {
    instruction_t instruction;
    arg_t arg1;
    arg_t arg2;
    arg_t arg3;
  };

  struct actual_arg_t {
    arg_t type;
    uint8_t param8;  // Used by ARG_8, ARG_IRAM_DIRECT, ARG_IMM8, ARG_REL8, ARG_BIT, ARG_NEG_BIT
    uint16_t param16;  // Used by ARG_IMM11, ARG_IMM16
  };

  // This is auto-generated by gen_opcodes.py (though needs to be copy-pasted
  // here manually).
  const instruction_decode_table_t instruction_decode_table[256] = {
    /* 00 */ { instruction_t::INS_NOP      , arg_t::ARG_NONE              , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 01 */ { instruction_t::INS_AJMP     , arg_t::ARG_IMM11             , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 02 */ { instruction_t::INS_LJMP     , arg_t::ARG_IMM16             , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 03 */ { instruction_t::INS_RR       , arg_t::ARG_A                 , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 04 */ { instruction_t::INS_INC      , arg_t::ARG_A                 , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 05 */ { instruction_t::INS_INC      , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 06 */ { instruction_t::INS_INC      , arg_t::ARG_R0_INDIRECT_IRAM  , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 07 */ { instruction_t::INS_INC      , arg_t::ARG_R1_INDIRECT_IRAM  , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 08 */ { instruction_t::INS_INC      , arg_t::ARG_R                 , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 09 */ { instruction_t::INS_INC      , arg_t::ARG_R                 , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 0A */ { instruction_t::INS_INC      , arg_t::ARG_R                 , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 0B */ { instruction_t::INS_INC      , arg_t::ARG_R                 , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 0C */ { instruction_t::INS_INC      , arg_t::ARG_R                 , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 0D */ { instruction_t::INS_INC      , arg_t::ARG_R                 , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 0E */ { instruction_t::INS_INC      , arg_t::ARG_R                 , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 0F */ { instruction_t::INS_INC      , arg_t::ARG_R                 , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 10 */ { instruction_t::INS_JBC      , arg_t::ARG_BIT               , arg_t::ARG_REL8              , arg_t::ARG_NONE               },
    /* 11 */ { instruction_t::INS_ACALL    , arg_t::ARG_IMM11             , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 12 */ { instruction_t::INS_LCALL    , arg_t::ARG_IMM16             , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 13 */ { instruction_t::INS_RRC      , arg_t::ARG_A                 , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 14 */ { instruction_t::INS_DEC      , arg_t::ARG_A                 , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 15 */ { instruction_t::INS_DEC      , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 16 */ { instruction_t::INS_DEC      , arg_t::ARG_R0_INDIRECT_IRAM  , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 17 */ { instruction_t::INS_DEC      , arg_t::ARG_R1_INDIRECT_IRAM  , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 18 */ { instruction_t::INS_DEC      , arg_t::ARG_R                 , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 19 */ { instruction_t::INS_DEC      , arg_t::ARG_R                 , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 1A */ { instruction_t::INS_DEC      , arg_t::ARG_R                 , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 1B */ { instruction_t::INS_DEC      , arg_t::ARG_R                 , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 1C */ { instruction_t::INS_DEC      , arg_t::ARG_R                 , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 1D */ { instruction_t::INS_DEC      , arg_t::ARG_R                 , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 1E */ { instruction_t::INS_DEC      , arg_t::ARG_R                 , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 1F */ { instruction_t::INS_DEC      , arg_t::ARG_R                 , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 20 */ { instruction_t::INS_JB       , arg_t::ARG_BIT               , arg_t::ARG_REL8              , arg_t::ARG_NONE               },
    /* 21 */ { instruction_t::INS_AJMP     , arg_t::ARG_IMM11             , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 22 */ { instruction_t::INS_RET      , arg_t::ARG_NONE              , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 23 */ { instruction_t::INS_RL       , arg_t::ARG_A                 , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 24 */ { instruction_t::INS_ADD      , arg_t::ARG_A                 , arg_t::ARG_IMM8              , arg_t::ARG_NONE               },
    /* 25 */ { instruction_t::INS_ADD      , arg_t::ARG_A                 , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_NONE               },
    /* 26 */ { instruction_t::INS_ADD      , arg_t::ARG_A                 , arg_t::ARG_R0_INDIRECT_IRAM  , arg_t::ARG_NONE               },
    /* 27 */ { instruction_t::INS_ADD      , arg_t::ARG_A                 , arg_t::ARG_R1_INDIRECT_IRAM  , arg_t::ARG_NONE               },
    /* 28 */ { instruction_t::INS_ADD      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 29 */ { instruction_t::INS_ADD      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 2A */ { instruction_t::INS_ADD      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 2B */ { instruction_t::INS_ADD      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 2C */ { instruction_t::INS_ADD      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 2D */ { instruction_t::INS_ADD      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 2E */ { instruction_t::INS_ADD      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 2F */ { instruction_t::INS_ADD      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 30 */ { instruction_t::INS_JNB      , arg_t::ARG_BIT               , arg_t::ARG_REL8              , arg_t::ARG_NONE               },
    /* 31 */ { instruction_t::INS_ACALL    , arg_t::ARG_IMM11             , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 32 */ { instruction_t::INS_RETI     , arg_t::ARG_NONE              , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 33 */ { instruction_t::INS_RLC      , arg_t::ARG_A                 , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 34 */ { instruction_t::INS_ADDC     , arg_t::ARG_A                 , arg_t::ARG_IMM8              , arg_t::ARG_NONE               },
    /* 35 */ { instruction_t::INS_ADDC     , arg_t::ARG_A                 , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_NONE               },
    /* 36 */ { instruction_t::INS_ADDC     , arg_t::ARG_A                 , arg_t::ARG_R0_INDIRECT_IRAM  , arg_t::ARG_NONE               },
    /* 37 */ { instruction_t::INS_ADDC     , arg_t::ARG_A                 , arg_t::ARG_R1_INDIRECT_IRAM  , arg_t::ARG_NONE               },
    /* 38 */ { instruction_t::INS_ADDC     , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 39 */ { instruction_t::INS_ADDC     , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 3A */ { instruction_t::INS_ADDC     , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 3B */ { instruction_t::INS_ADDC     , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 3C */ { instruction_t::INS_ADDC     , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 3D */ { instruction_t::INS_ADDC     , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 3E */ { instruction_t::INS_ADDC     , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 3F */ { instruction_t::INS_ADDC     , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 40 */ { instruction_t::INS_JC       , arg_t::ARG_REL8              , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 41 */ { instruction_t::INS_AJMP     , arg_t::ARG_IMM11             , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 42 */ { instruction_t::INS_ORL      , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_A                 , arg_t::ARG_NONE               },
    /* 43 */ { instruction_t::INS_ORL      , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_IMM8              , arg_t::ARG_NONE               },
    /* 44 */ { instruction_t::INS_ORL      , arg_t::ARG_A                 , arg_t::ARG_IMM8              , arg_t::ARG_NONE               },
    /* 45 */ { instruction_t::INS_ORL      , arg_t::ARG_A                 , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_NONE               },
    /* 46 */ { instruction_t::INS_ORL      , arg_t::ARG_A                 , arg_t::ARG_R0_INDIRECT_IRAM  , arg_t::ARG_NONE               },
    /* 47 */ { instruction_t::INS_ORL      , arg_t::ARG_A                 , arg_t::ARG_R1_INDIRECT_IRAM  , arg_t::ARG_NONE               },
    /* 48 */ { instruction_t::INS_ORL      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 49 */ { instruction_t::INS_ORL      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 4A */ { instruction_t::INS_ORL      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 4B */ { instruction_t::INS_ORL      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 4C */ { instruction_t::INS_ORL      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 4D */ { instruction_t::INS_ORL      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 4E */ { instruction_t::INS_ORL      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 4F */ { instruction_t::INS_ORL      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 50 */ { instruction_t::INS_JNC      , arg_t::ARG_REL8              , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 51 */ { instruction_t::INS_ACALL    , arg_t::ARG_IMM11             , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 52 */ { instruction_t::INS_ANL      , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_A                 , arg_t::ARG_NONE               },
    /* 53 */ { instruction_t::INS_ANL      , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_IMM8              , arg_t::ARG_NONE               },
    /* 54 */ { instruction_t::INS_ANL      , arg_t::ARG_A                 , arg_t::ARG_IMM8              , arg_t::ARG_NONE               },
    /* 55 */ { instruction_t::INS_ANL      , arg_t::ARG_A                 , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_NONE               },
    /* 56 */ { instruction_t::INS_ANL      , arg_t::ARG_A                 , arg_t::ARG_R0_INDIRECT_IRAM  , arg_t::ARG_NONE               },
    /* 57 */ { instruction_t::INS_ANL      , arg_t::ARG_A                 , arg_t::ARG_R1_INDIRECT_IRAM  , arg_t::ARG_NONE               },
    /* 58 */ { instruction_t::INS_ANL      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 59 */ { instruction_t::INS_ANL      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 5A */ { instruction_t::INS_ANL      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 5B */ { instruction_t::INS_ANL      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 5C */ { instruction_t::INS_ANL      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 5D */ { instruction_t::INS_ANL      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 5E */ { instruction_t::INS_ANL      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 5F */ { instruction_t::INS_ANL      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 60 */ { instruction_t::INS_JZ       , arg_t::ARG_REL8              , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 61 */ { instruction_t::INS_AJMP     , arg_t::ARG_IMM11             , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 62 */ { instruction_t::INS_XRL      , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_A                 , arg_t::ARG_NONE               },
    /* 63 */ { instruction_t::INS_XRL      , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_IMM8              , arg_t::ARG_NONE               },
    /* 64 */ { instruction_t::INS_XRL      , arg_t::ARG_A                 , arg_t::ARG_IMM8              , arg_t::ARG_NONE               },
    /* 65 */ { instruction_t::INS_XRL      , arg_t::ARG_A                 , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_NONE               },
    /* 66 */ { instruction_t::INS_XRL      , arg_t::ARG_A                 , arg_t::ARG_R0_INDIRECT_IRAM  , arg_t::ARG_NONE               },
    /* 67 */ { instruction_t::INS_XRL      , arg_t::ARG_A                 , arg_t::ARG_R1_INDIRECT_IRAM  , arg_t::ARG_NONE               },
    /* 68 */ { instruction_t::INS_XRL      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 69 */ { instruction_t::INS_XRL      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 6A */ { instruction_t::INS_XRL      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 6B */ { instruction_t::INS_XRL      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 6C */ { instruction_t::INS_XRL      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 6D */ { instruction_t::INS_XRL      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 6E */ { instruction_t::INS_XRL      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 6F */ { instruction_t::INS_XRL      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 70 */ { instruction_t::INS_JNZ      , arg_t::ARG_REL8              , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 71 */ { instruction_t::INS_ACALL    , arg_t::ARG_IMM11             , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 72 */ { instruction_t::INS_ORL      , arg_t::ARG_C                 , arg_t::ARG_BIT               , arg_t::ARG_NONE               },
    /* 73 */ { instruction_t::INS_JMP      , arg_t::ARG_A_DPTR            , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 74 */ { instruction_t::INS_MOV      , arg_t::ARG_A                 , arg_t::ARG_IMM8              , arg_t::ARG_NONE               },
    /* 75 */ { instruction_t::INS_MOV      , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_IMM8              , arg_t::ARG_NONE               },
    /* 76 */ { instruction_t::INS_MOV      , arg_t::ARG_R0_INDIRECT_IRAM  , arg_t::ARG_IMM8              , arg_t::ARG_NONE               },
    /* 77 */ { instruction_t::INS_MOV      , arg_t::ARG_R1_INDIRECT_IRAM  , arg_t::ARG_IMM8              , arg_t::ARG_NONE               },
    /* 78 */ { instruction_t::INS_MOV      , arg_t::ARG_R                 , arg_t::ARG_IMM8              , arg_t::ARG_NONE               },
    /* 79 */ { instruction_t::INS_MOV      , arg_t::ARG_R                 , arg_t::ARG_IMM8              , arg_t::ARG_NONE               },
    /* 7A */ { instruction_t::INS_MOV      , arg_t::ARG_R                 , arg_t::ARG_IMM8              , arg_t::ARG_NONE               },
    /* 7B */ { instruction_t::INS_MOV      , arg_t::ARG_R                 , arg_t::ARG_IMM8              , arg_t::ARG_NONE               },
    /* 7C */ { instruction_t::INS_MOV      , arg_t::ARG_R                 , arg_t::ARG_IMM8              , arg_t::ARG_NONE               },
    /* 7D */ { instruction_t::INS_MOV      , arg_t::ARG_R                 , arg_t::ARG_IMM8              , arg_t::ARG_NONE               },
    /* 7E */ { instruction_t::INS_MOV      , arg_t::ARG_R                 , arg_t::ARG_IMM8              , arg_t::ARG_NONE               },
    /* 7F */ { instruction_t::INS_MOV      , arg_t::ARG_R                 , arg_t::ARG_IMM8              , arg_t::ARG_NONE               },
    /* 80 */ { instruction_t::INS_SJMP     , arg_t::ARG_REL8              , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 81 */ { instruction_t::INS_AJMP     , arg_t::ARG_IMM11             , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 82 */ { instruction_t::INS_ANL      , arg_t::ARG_C                 , arg_t::ARG_BIT               , arg_t::ARG_NONE               },
    /* 83 */ { instruction_t::INS_MOVC     , arg_t::ARG_A                 , arg_t::ARG_A_PC_INDIRECT_PMEM, arg_t::ARG_NONE               },
    /* 84 */ { instruction_t::INS_DIV      , arg_t::ARG_A                 , arg_t::ARG_B                 , arg_t::ARG_NONE               },
    /* 85 */ { instruction_t::INS_MOV      , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_NONE               },
    /* 86 */ { instruction_t::INS_MOV      , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_R0_INDIRECT_IRAM  , arg_t::ARG_NONE               },
    /* 87 */ { instruction_t::INS_MOV      , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_R1_INDIRECT_IRAM  , arg_t::ARG_NONE               },
    /* 88 */ { instruction_t::INS_MOV      , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 89 */ { instruction_t::INS_MOV      , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 8A */ { instruction_t::INS_MOV      , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 8B */ { instruction_t::INS_MOV      , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 8C */ { instruction_t::INS_MOV      , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 8D */ { instruction_t::INS_MOV      , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 8E */ { instruction_t::INS_MOV      , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 8F */ { instruction_t::INS_MOV      , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 90 */ { instruction_t::INS_MOV      , arg_t::ARG_DPTR              , arg_t::ARG_IMM16             , arg_t::ARG_NONE               },
    /* 91 */ { instruction_t::INS_ACALL    , arg_t::ARG_IMM11             , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* 92 */ { instruction_t::INS_MOV      , arg_t::ARG_BIT               , arg_t::ARG_C                 , arg_t::ARG_NONE               },
    /* 93 */ { instruction_t::INS_MOVC     , arg_t::ARG_A                 , arg_t::ARG_A_DPTR_INDIRECT_PMEM, arg_t::ARG_NONE               },
    /* 94 */ { instruction_t::INS_SUBB     , arg_t::ARG_A                 , arg_t::ARG_IMM8              , arg_t::ARG_NONE               },
    /* 95 */ { instruction_t::INS_SUBB     , arg_t::ARG_A                 , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_NONE               },
    /* 96 */ { instruction_t::INS_SUBB     , arg_t::ARG_A                 , arg_t::ARG_R0_INDIRECT_IRAM  , arg_t::ARG_NONE               },
    /* 97 */ { instruction_t::INS_SUBB     , arg_t::ARG_A                 , arg_t::ARG_R1_INDIRECT_IRAM  , arg_t::ARG_NONE               },
    /* 98 */ { instruction_t::INS_SUBB     , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 99 */ { instruction_t::INS_SUBB     , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 9A */ { instruction_t::INS_SUBB     , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 9B */ { instruction_t::INS_SUBB     , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 9C */ { instruction_t::INS_SUBB     , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 9D */ { instruction_t::INS_SUBB     , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 9E */ { instruction_t::INS_SUBB     , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* 9F */ { instruction_t::INS_SUBB     , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* A0 */ { instruction_t::INS_ORL      , arg_t::ARG_C                 , arg_t::ARG_NEG_BIT           , arg_t::ARG_NONE               },
    /* A1 */ { instruction_t::INS_AJMP     , arg_t::ARG_IMM11             , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* A2 */ { instruction_t::INS_MOV      , arg_t::ARG_C                 , arg_t::ARG_BIT               , arg_t::ARG_NONE               },
    /* A3 */ { instruction_t::INS_INC      , arg_t::ARG_DPTR              , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* A4 */ { instruction_t::INS_MUL      , arg_t::ARG_A                 , arg_t::ARG_B                 , arg_t::ARG_NONE               },
    /* A5 */ { instruction_t::INS_UNDEFINED, arg_t::ARG_NONE              , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* A6 */ { instruction_t::INS_MOV      , arg_t::ARG_R0_INDIRECT_IRAM  , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_NONE               },
    /* A7 */ { instruction_t::INS_MOV      , arg_t::ARG_R1_INDIRECT_IRAM  , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_NONE               },
    /* A8 */ { instruction_t::INS_MOV      , arg_t::ARG_R                 , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_NONE               },
    /* A9 */ { instruction_t::INS_MOV      , arg_t::ARG_R                 , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_NONE               },
    /* AA */ { instruction_t::INS_MOV      , arg_t::ARG_R                 , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_NONE               },
    /* AB */ { instruction_t::INS_MOV      , arg_t::ARG_R                 , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_NONE               },
    /* AC */ { instruction_t::INS_MOV      , arg_t::ARG_R                 , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_NONE               },
    /* AD */ { instruction_t::INS_MOV      , arg_t::ARG_R                 , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_NONE               },
    /* AE */ { instruction_t::INS_MOV      , arg_t::ARG_R                 , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_NONE               },
    /* AF */ { instruction_t::INS_MOV      , arg_t::ARG_R                 , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_NONE               },
    /* B0 */ { instruction_t::INS_ANL      , arg_t::ARG_C                 , arg_t::ARG_NEG_BIT           , arg_t::ARG_NONE               },
    /* B1 */ { instruction_t::INS_ACALL    , arg_t::ARG_IMM11             , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* B2 */ { instruction_t::INS_CPL      , arg_t::ARG_BIT               , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* B3 */ { instruction_t::INS_CPL      , arg_t::ARG_C                 , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* B4 */ { instruction_t::INS_CJNE     , arg_t::ARG_A                 , arg_t::ARG_IMM8              , arg_t::ARG_REL8               },
    /* B5 */ { instruction_t::INS_CJNE     , arg_t::ARG_A                 , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_REL8               },
    /* B6 */ { instruction_t::INS_CJNE     , arg_t::ARG_R0_INDIRECT_IRAM  , arg_t::ARG_IMM8              , arg_t::ARG_REL8               },
    /* B7 */ { instruction_t::INS_CJNE     , arg_t::ARG_R1_INDIRECT_IRAM  , arg_t::ARG_IMM8              , arg_t::ARG_REL8               },
    /* B8 */ { instruction_t::INS_CJNE     , arg_t::ARG_R                 , arg_t::ARG_IMM8              , arg_t::ARG_REL8               },
    /* B9 */ { instruction_t::INS_CJNE     , arg_t::ARG_R                 , arg_t::ARG_IMM8              , arg_t::ARG_REL8               },
    /* BA */ { instruction_t::INS_CJNE     , arg_t::ARG_R                 , arg_t::ARG_IMM8              , arg_t::ARG_REL8               },
    /* BB */ { instruction_t::INS_CJNE     , arg_t::ARG_R                 , arg_t::ARG_IMM8              , arg_t::ARG_REL8               },
    /* BC */ { instruction_t::INS_CJNE     , arg_t::ARG_R                 , arg_t::ARG_IMM8              , arg_t::ARG_REL8               },
    /* BD */ { instruction_t::INS_CJNE     , arg_t::ARG_R                 , arg_t::ARG_IMM8              , arg_t::ARG_REL8               },
    /* BE */ { instruction_t::INS_CJNE     , arg_t::ARG_R                 , arg_t::ARG_IMM8              , arg_t::ARG_REL8               },
    /* BF */ { instruction_t::INS_CJNE     , arg_t::ARG_R                 , arg_t::ARG_IMM8              , arg_t::ARG_REL8               },
    /* C0 */ { instruction_t::INS_PUSH     , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* C1 */ { instruction_t::INS_AJMP     , arg_t::ARG_IMM11             , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* C2 */ { instruction_t::INS_CLR      , arg_t::ARG_BIT               , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* C3 */ { instruction_t::INS_CLR      , arg_t::ARG_C                 , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* C4 */ { instruction_t::INS_SWAP     , arg_t::ARG_A                 , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* C5 */ { instruction_t::INS_XCH      , arg_t::ARG_A                 , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_NONE               },
    /* C6 */ { instruction_t::INS_XCH      , arg_t::ARG_A                 , arg_t::ARG_R0_INDIRECT_IRAM  , arg_t::ARG_NONE               },
    /* C7 */ { instruction_t::INS_XCH      , arg_t::ARG_A                 , arg_t::ARG_R1_INDIRECT_IRAM  , arg_t::ARG_NONE               },
    /* C8 */ { instruction_t::INS_XCH      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* C9 */ { instruction_t::INS_XCH      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* CA */ { instruction_t::INS_XCH      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* CB */ { instruction_t::INS_XCH      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* CC */ { instruction_t::INS_XCH      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* CD */ { instruction_t::INS_XCH      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* CE */ { instruction_t::INS_XCH      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* CF */ { instruction_t::INS_XCH      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* D0 */ { instruction_t::INS_POP      , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* D1 */ { instruction_t::INS_ACALL    , arg_t::ARG_IMM11             , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* D2 */ { instruction_t::INS_SETB     , arg_t::ARG_BIT               , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* D3 */ { instruction_t::INS_SETB     , arg_t::ARG_C                 , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* D4 */ { instruction_t::INS_DA       , arg_t::ARG_A                 , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* D5 */ { instruction_t::INS_DJNZ     , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_REL8              , arg_t::ARG_NONE               },
    /* D6 */ { instruction_t::INS_XCHD     , arg_t::ARG_A                 , arg_t::ARG_R0_INDIRECT_IRAM  , arg_t::ARG_NONE               },
    /* D7 */ { instruction_t::INS_XCHD     , arg_t::ARG_A                 , arg_t::ARG_R1_INDIRECT_IRAM  , arg_t::ARG_NONE               },
    /* D8 */ { instruction_t::INS_DJNZ     , arg_t::ARG_R                 , arg_t::ARG_REL8              , arg_t::ARG_NONE               },
    /* D9 */ { instruction_t::INS_DJNZ     , arg_t::ARG_R                 , arg_t::ARG_REL8              , arg_t::ARG_NONE               },
    /* DA */ { instruction_t::INS_DJNZ     , arg_t::ARG_R                 , arg_t::ARG_REL8              , arg_t::ARG_NONE               },
    /* DB */ { instruction_t::INS_DJNZ     , arg_t::ARG_R                 , arg_t::ARG_REL8              , arg_t::ARG_NONE               },
    /* DC */ { instruction_t::INS_DJNZ     , arg_t::ARG_R                 , arg_t::ARG_REL8              , arg_t::ARG_NONE               },
    /* DD */ { instruction_t::INS_DJNZ     , arg_t::ARG_R                 , arg_t::ARG_REL8              , arg_t::ARG_NONE               },
    /* DE */ { instruction_t::INS_DJNZ     , arg_t::ARG_R                 , arg_t::ARG_REL8              , arg_t::ARG_NONE               },
    /* DF */ { instruction_t::INS_DJNZ     , arg_t::ARG_R                 , arg_t::ARG_REL8              , arg_t::ARG_NONE               },
    /* E0 */ { instruction_t::INS_MOVX     , arg_t::ARG_A                 , arg_t::ARG_DPTR_INDIRECT_XRAM, arg_t::ARG_NONE               },
    /* E1 */ { instruction_t::INS_AJMP     , arg_t::ARG_IMM11             , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* E2 */ { instruction_t::INS_MOVX     , arg_t::ARG_A                 , arg_t::ARG_R0_INDIRECT_XRAM  , arg_t::ARG_NONE               },
    /* E3 */ { instruction_t::INS_MOVX     , arg_t::ARG_A                 , arg_t::ARG_R1_INDIRECT_XRAM  , arg_t::ARG_NONE               },
    /* E4 */ { instruction_t::INS_CLR      , arg_t::ARG_A                 , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* E5 */ { instruction_t::INS_MOV      , arg_t::ARG_A                 , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_NONE               },
    /* E6 */ { instruction_t::INS_MOV      , arg_t::ARG_A                 , arg_t::ARG_R0_INDIRECT_IRAM  , arg_t::ARG_NONE               },
    /* E7 */ { instruction_t::INS_MOV      , arg_t::ARG_A                 , arg_t::ARG_R1_INDIRECT_IRAM  , arg_t::ARG_NONE               },
    /* E8 */ { instruction_t::INS_MOV      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* E9 */ { instruction_t::INS_MOV      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* EA */ { instruction_t::INS_MOV      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* EB */ { instruction_t::INS_MOV      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* EC */ { instruction_t::INS_MOV      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* ED */ { instruction_t::INS_MOV      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* EE */ { instruction_t::INS_MOV      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* EF */ { instruction_t::INS_MOV      , arg_t::ARG_A                 , arg_t::ARG_R                 , arg_t::ARG_NONE               },
    /* F0 */ { instruction_t::INS_MOVX     , arg_t::ARG_DPTR_INDIRECT_XRAM, arg_t::ARG_A                 , arg_t::ARG_NONE               },
    /* F1 */ { instruction_t::INS_ACALL    , arg_t::ARG_IMM11             , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* F2 */ { instruction_t::INS_MOVX     , arg_t::ARG_R0_INDIRECT_XRAM  , arg_t::ARG_A                 , arg_t::ARG_NONE               },
    /* F3 */ { instruction_t::INS_MOVX     , arg_t::ARG_R1_INDIRECT_XRAM  , arg_t::ARG_A                 , arg_t::ARG_NONE               },
    /* F4 */ { instruction_t::INS_CPL      , arg_t::ARG_A                 , arg_t::ARG_NONE              , arg_t::ARG_NONE               },
    /* F5 */ { instruction_t::INS_MOV      , arg_t::ARG_DIRECT_IRAM       , arg_t::ARG_A                 , arg_t::ARG_NONE               },
    /* F6 */ { instruction_t::INS_MOV      , arg_t::ARG_R0_INDIRECT_IRAM  , arg_t::ARG_A                 , arg_t::ARG_NONE               },
    /* F7 */ { instruction_t::INS_MOV      , arg_t::ARG_R1_INDIRECT_IRAM  , arg_t::ARG_A                 , arg_t::ARG_NONE               },
    /* F8 */ { instruction_t::INS_MOV      , arg_t::ARG_R                 , arg_t::ARG_A                 , arg_t::ARG_NONE               },
    /* F9 */ { instruction_t::INS_MOV      , arg_t::ARG_R                 , arg_t::ARG_A                 , arg_t::ARG_NONE               },
    /* FA */ { instruction_t::INS_MOV      , arg_t::ARG_R                 , arg_t::ARG_A                 , arg_t::ARG_NONE               },
    /* FB */ { instruction_t::INS_MOV      , arg_t::ARG_R                 , arg_t::ARG_A                 , arg_t::ARG_NONE               },
    /* FC */ { instruction_t::INS_MOV      , arg_t::ARG_R                 , arg_t::ARG_A                 , arg_t::ARG_NONE               },
    /* FD */ { instruction_t::INS_MOV      , arg_t::ARG_R                 , arg_t::ARG_A                 , arg_t::ARG_NONE               },
    /* FE */ { instruction_t::INS_MOV      , arg_t::ARG_R                 , arg_t::ARG_A                 , arg_t::ARG_NONE               },
    /* FF */ { instruction_t::INS_MOV      , arg_t::ARG_R                 , arg_t::ARG_A                 , arg_t::ARG_NONE               }
  };

}  // namespace emu8051opcodes
